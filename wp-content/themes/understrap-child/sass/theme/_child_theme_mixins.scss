// helpful mixins for sass
// vendor prefixes
// @include css3-prefix(transform, scale3d(2.5, 2, 1.5));
@mixin css3-prefix($prop, $value) {
    -webkit-#{$prop}: #{$value};
    -moz-#{$prop}: #{$value};
    -ms-#{$prop}: #{$value};
    -o-#{$prop}: #{$value};
    #{$prop}: #{$value};
}

// clearfix mixin
// @extend %clearfix;
%clearfix {
    *zoom: 1;
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// vertical centering
// @include vertical-center();
@mixin vertical-center {
    position: relative;
    top: 50%;
    -ms-transform: translateY(-50%);
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
}

// font face rule
// @include font-face("My Font", my-font);
@mixin font-face($name, $file) {
    @font-face {
        font-family: "#{$name}";
        src: url("../fonts/#{$file}.eot");
        src: url("../fonts/#{$file}.eot?#iefix") format("embedded-opentype"),
        url("../fonts/#{$file}.woff") format("woff"),
        url("../fonts/#{$file}.ttf") format("truetype"),
        url("../fonts/#{$file}.svg?#webfont") format("svg");
    }
}

// calculate consistent font sizes
// @include font-size(14px)
@function calculateRem($size) {
    $remSize: $size / 16px;
    @return $remSize * 1rem;
}

@mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

/*
// keyframe animations
// Define animation name, and 
@include keyframes(fade-out) {
    0% { opacity: 1; }
    90% { opacity: 0; }
}
// Add animation to element
.element {
    width: 100px;
    height: 100px;
    background: black;
    @include animation('fade-out 5s 3');
}
*/

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

// animation
@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -ms-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str};
}

// absolute positioning
// @include abs-position(100px, 100px, auto, auto);
@mixin abs-position ($top,
$right,
$bottom,
$left) {
    position: absolute;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

// text shortening
// @include text-shorten();
@mixin text-shorten {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// background gradients
// $start-color, $end-color, $orientation - vertical/horizontal/radial
// @include background-gradient(red, black, 'vertical');
@mixin background-gradient($start-color,
$end-color,
$orientation) {
    background: $start-color;
    @if $orientation=='vertical' {
        background: -webkit-linear-gradient(top, $start-color, $end-color);
        background: linear-gradient(to bottom, $start-color, $end-color);
    }
    @else if $orientation=='horizontal' {
        background: -webkit-linear-gradient(left, $start-color, $end-color);
        background: linear-gradient(to right, $start-color, $end-color);
    }
    @else {
        background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
        background: radial-gradient(ellipse at center, $start-color, $end-color);
    }
}

// mobile-first 
// @include breakpoint(large) {}
@mixin breakpoint($point) {
    @if $point==large {
        @media only screen and (min-width: 1366px) {
            @content;
        }
    }
    @else if $point==desktop {
        @media only screen and (min-width: 1024px) {
            @content;
        }
    }
    @else if $point==tablet {
        @media only screen and (min-width: 600px) {
            @content;
        }
    }
}